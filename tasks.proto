syntax = "proto3";

service TaskService {
  rpc SendTask(TaskRequest) returns (Ack);
  rpc GetQueueLength(Empty) returns (QueueLengthResponse);
  rpc GetCPUUsage(Empty) returns (CPUUsageResponse);
  rpc StealTask(Empty) returns (TaskResponse);
  rpc Heartbeat(Empty) returns (HeartbeatResponse);

  rpc WriteData(WriteRequest) returns (Ack);
  rpc ReadData(ReadRequest) returns (ReadResponse);
  rpc GetResult(GetResultRequest) returns (GetResultResponse);

  // dynamic add
  rpc AnnouncePresence(ServerInfo) returns (Ack);
}

message Empty {}

message TaskRequest {
  string name       = 1;
  int32  weight     = 2;
  bool   replicated = 3;
  int32  source_id  = 4;
  bool   executed   = 5;
  string result     = 6;
}

message TaskResponse {
  TaskRequest task = 1;
  bool       success = 2;
}

message Ack {
  bool success = 1;
}

message QueueLengthResponse {
  int32 length = 1;
}

message CPUUsageResponse {
  double usage = 1;
}

message HeartbeatResponse {
  int64 timestamp = 1;
}

message WriteRequest {
  string key   = 1;
  string value = 2;
}

message ReadRequest {
  string key         = 1;
  int32  read_quorum = 2;
}

message ReadResponse {
  string value     = 1;
  bool   success   = 2;
  int32  served_by = 3;
}

message GetResultRequest  { string name = 1; }
message GetResultResponse { bool success = 1; string result = 2; int32 served_by = 3; }

// dynamic add info
message ServerInfo {
  int32  server_id = 1;
  string host      = 2; // e.g. "localhost:50050"
  int32  dist      = 3; // network distance
}
